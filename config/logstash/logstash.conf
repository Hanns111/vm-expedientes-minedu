input {
  beats {
    port => 5044
  }
  
  http {
    port => 5000
    codec => json
  }
  
  tcp {
    port => 5000
    codec => json_lines
  }
}

filter {
  # Parse JSON logs from MINEDU backend
  if [fields][service] == "minedu-backend" {
    json {
      source => "message"
    }
    
    # Parse timestamp
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    # Add geolocation for IP addresses
    if [ip_address] {
      geoip {
        source => "ip_address"
        target => "geoip"
      }
    }
    
    # Categorize log levels
    if [level] == "ERROR" {
      mutate {
        add_tag => ["error", "alert"]
      }
    }
    
    if [level] == "WARNING" {
      mutate {
        add_tag => ["warning"]
      }
    }
    
    # Extract search metrics
    if [operation] == "search" {
      mutate {
        add_tag => ["search_query"]
        add_field => { "category" => "business_metrics" }
      }
      
      # Performance thresholds
      if [processing_time] and [processing_time] > 1000 {
        mutate {
          add_tag => ["slow_query"]
        }
      }
    }
    
    # Security events
    if [operation] == "security_validation" {
      mutate {
        add_tag => ["security"]
        add_field => { "category" => "security" }
      }
    }
  }
  
  # Parse Docker container logs
  if [container][name] {
    mutate {
      add_field => { "service_name" => "%{[container][name]}" }
    }
  }
  
  # Clean up fields
  mutate {
    remove_field => ["agent", "ecs", "host"]
  }
}

output {
  # Send to Elasticsearch with dynamic index names
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "minedu-logs-%{+YYYY.MM.dd}"
    template_name => "minedu-logs"
    template => "/usr/share/logstash/templates/minedu-logs-template.json"
    template_overwrite => true
  }
  
  # Debug output (remove in production)
  stdout {
    codec => rubydebug
  }
  
  # Alert on errors
  if "error" in [tags] {
    http {
      url => "http://alertmanager:9093/api/v1/alerts"
      http_method => "post"
      format => "json"
      mapping => {
        "alerts" => [
          {
            "labels" => {
              "alertname" => "MinEduLogError"
              "service" => "%{service}"
              "severity" => "critical"
            }
            "annotations" => {
              "summary" => "%{message}"
              "description" => "Error in MINEDU service: %{message}"
            }
          }
        ]
      }
    }
  }
}